//+------------------------------------------------------------------+
//|                                                         user.mqh |
//|                                    Copyright 2021, Dollarkiller. |
//|                           https://github.com/dollarkillerx/Quant |
//+------------------------------------------------------------------+
#property copyright "Copyright 2021, Dollarkiller."
#property link      "https://github.com/dollarkillerx/Quant"


//+------------------------------------------------------------------+
//|         用户账户相关函数
//+------------------------------------------------------------------+
struct user_info
  {

   // 基础信息
   bool              ea; // 是否运行EA交易
   long              leverage; // 账户杠杆
   long               limit_orders; // 最大活跃订单数
   ENUM_ACCOUNT_TRADE_MODE trade_mode; // 交易方式
   long              login; // 账户ID
   long               currency_digits; // 账户货币的小数位数，这是正确展示交易结果所必需的
  };


// 用户资本信息
struct user_capital
  {
   // 资金信息
   double balance ; // 账户余额
   double creait ; // 账户亏空
   double            profit; // 账户利润
   double            assets; // 账户活动资本
   double            liabilites; // 账户流动负债
  };

// 交易商信息
struct dealers
  {
   // 服务商信息
   string            name;// 用户名
   string            server; // 交易服务器名称
   string            currency; // 账户货币
   string            company; // 账户公司名称
  };

// 客户端信息
struct client_info
  {
   bool              connected; // 是否连接上服务器
   bool              dll; // 是否运行dll
   bool              trade; // 是否允许交易
   int               ping;// 链接延迟
  };

//+------------------------------------------------------------------+
//|       用户基础信息
//+------------------------------------------------------------------+
class User
  {
public:
                     User(void);
                    ~User(void);
   // 获取用户账户基础信息
   static user_info  GetUserInfo();
   // 获取用户资产信息
   static user_capital GetUserCapital();
   // 获取用户服务商信息
   static dealers    GetUserDealers();
   // 获取用户客户端信息
   static client_info GetUserClientInfo();
  };


//+------------------------------------------------------------------+
//|      初始化
//+------------------------------------------------------------------+
User::User(void) {};
User::~User(void) {};


//+------------------------------------------------------------------+
//|         获取基础账户信息
//+------------------------------------------------------------------+
static user_info User::GetUserInfo()
  {
   user_info uInfo;
   uInfo.login = AccountInfoInteger(ACCOUNT_LOGIN);
   uInfo.ea = AccountInfoInteger(ACCOUNT_TRADE_EXPERT);
   uInfo.leverage = AccountInfoInteger(ACCOUNT_LEVERAGE);
   uInfo.limit_orders = AccountInfoInteger(ACCOUNT_LIMIT_ORDERS);
   uInfo.currency_digits = AccountInfoInteger(ACCOUNT_CURRENCY_DIGITS);
   uInfo.trade_mode = AccountInfoInteger(ACCOUNT_TRADE_MODE);


   return uInfo;
  };

//+------------------------------------------------------------------+

// 获取用户资本信息
static user_capital User::GetUserCapital()
  {
   user_capital uInfo;


   uInfo.balance = AccountInfoDouble(ACCOUNT_BALANCE);
   uInfo.creait = AccountInfoDouble(ACCOUNT_CREDIT);
   uInfo.profit = AccountInfoDouble(ACCOUNT_PROFIT);
   uInfo.assets = AccountInfoDouble(ACCOUNT_ASSETS);
   uInfo.liabilites = AccountInfoDouble(ACCOUNT_LIABILITIES);

   return uInfo;
  };

// 交易商信息
static dealers User::GetUserDealers()
  {
   dealers uInfo;

   uInfo.name = AccountInfoString(ACCOUNT_NAME);
   uInfo.server = AccountInfoString(ACCOUNT_SERVER);
   uInfo.currency = AccountInfoString(ACCOUNT_CURRENCY);
   uInfo.company = AccountInfoString(ACCOUNT_COMPANY);

   return uInfo;
  };

// 获取用户客户端信息
static client_info User::GetUserClientInfo()
  {
   client_info uInfo;

   uInfo.connected = TerminalInfoInteger(TERMINAL_CODEPAGE);
   uInfo.dll = TerminalInfoInteger(TERMINAL_DLLS_ALLOWED);
   uInfo.ping = TerminalInfoInteger(TERMINAL_PING_LAST);
   uInfo.trade = TerminalInfoInteger(TERMINAL_TRADE_ALLOWED);

   return uInfo;
  };
//+------------------------------------------------------------------+
